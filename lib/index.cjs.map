{"version":3,"sources":["/home/runner/work/ihbp-client/ihbp-client/lib/index.cjs","../src/constants/common.ts","../src/client/Client.ts","../src/constants/selectors.ts","../src/utils/index.ts","../src/utils/elementObserver.ts","../src/client/pwned.ts","../src/types/puppeteer.types.ts","../src/types/client.types.ts"],"names":["common_exports","__export","DEFAULT_CLIENT_OPTIONS","DEFAULT_PUPPETEER_OPTIONS","HIBP_REFERRER","HIBP_URL","selectors_exports","EMAIL_BTN","EMAIL_INPUT","HOME_NAVBAR_LINK","PASSWORD_INPUT","PASSWORD_NAVBAR_LINK","PWNED_BTN","PWNED_EMAIL_RESULT","PWNED_MESSAGE_CONTAINER","PWNED_MESSAGE_RESULT","utils_exports","isElementInDom","page","elementSelector","selector","resolve","observer","Pwned","email","el","password","minDelay","maxDelay","randomDelay","min","max","Ihbp","EventEmitter","options","puppeteerOptions","UserAgent","event","listener","puppeteer","StealthPlugin","pages","error","ms","eventName","cb","args","puppeteer_types_exports","client_types_exports"],"mappings":"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","file":"/home/runner/work/ihbp-client/ihbp-client/lib/index.cjs","sourcesContent":[null,"import { ClientOptions, PuppeteerOptions } from '@/types/puppeteer.types'\n\nexport const HIBP_URL: string = 'https://haveibeenpwned.com/'\nexport const HIBP_REFERRER: string =\n    'https://www.google.com/search?q=ihave+been+pwned&oq=ihave+been+pwned&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTINCAEQLhiDARixAxiABDIHCAIQABiABDINCAMQLhjHARjRAxiABDIHCAQQLhiABDIJCAUQABgKGIAEMgcIBhAAGIAEMgcIBxAAGIAEMgcICBAAGIAE0gEIMzkwOWowajeoAgCwAgA&sourceid=chrome&ie=UTF-8'\n\nexport const DEFAULT_PUPPETEER_OPTIONS: PuppeteerOptions = {\n    headless: false,\n    defaultViewport: null,\n    args: ['--no-sandbox', '--disable-setuid-sandbox'],\n}\n\nexport const DEFAULT_CLIENT_OPTIONS: ClientOptions = {\n    authTimeoutMs: 0,\n    qrMaxRetries: 0,\n    takeoverOnConflict: false,\n    takeoverTimeoutMs: 0,\n    ffmpegPath: 'ffmpeg',\n    bypassCSP: true,\n    proxyAuthentication: undefined,\n}\n","import { Browser, Page } from 'puppeteer'\nimport {\n    DEFAULT_CLIENT_OPTIONS,\n    DEFAULT_PUPPETEER_OPTIONS,\n    HIBP_URL,\n    HIBP_REFERRER,\n} from '@constants/common'\nimport EventEmitter from 'node:events'\nimport { Pwned } from '@client/pwned'\nimport puppeteer from 'puppeteer-extra'\nimport StealthPlugin from 'puppeteer-extra-plugin-stealth'\nimport UserAgent from 'user-agents'\nimport {\n    ClientOptions,\n    EventListenerCallBack,\n    PuppeteerOptions,\n} from '../types'\n\nexport class Ihbp extends EventEmitter {\n    private readonly puppeteerOptions?: PuppeteerOptions\n    private options: ClientOptions\n    private page?: Page\n    private browser?: Browser\n    private pwned: Pwned\n    private userAgent: UserAgent\n\n    constructor(\n        options: ClientOptions,\n        puppeteerOptions: Partial<PuppeteerOptions> = {}\n    ) {\n        super()\n        this.puppeteerOptions = {\n            ...DEFAULT_PUPPETEER_OPTIONS,\n            ...puppeteerOptions,\n        }\n        this.options = { ...DEFAULT_CLIENT_OPTIONS, ...options }\n        this.pwned = new Pwned()\n        this.userAgent = new UserAgent()\n    }\n\n    when(event: string, listener: EventListenerCallBack) {\n        this.on(event, listener)\n    }\n\n    async init() {\n        await this.initializeBrowser()\n        await this.configurePageOptions()\n        await this.navigateToHIBP()\n    }\n\n    protected async isPasswordPwned(password: string) {\n        return await this.pwned.isPasswordPwned(this.page!, password)\n    }\n\n    protected async isEmailPwned(email: string) {\n        await this.navigateToHIBP()\n        return await this.pwned.isEmailPwned(this.page!, email)\n    }\n\n    private async initializeBrowser(): Promise<void> {\n        try {\n            this.browser = await puppeteer\n                .use(StealthPlugin())\n                .launch(this.puppeteerOptions)\n            const pages: Page[] = await this.browser.pages()\n            this.page =\n                pages.length > 0 ? pages[0] : await this.browser.newPage()\n\n            if (this.browser && this.page) {\n                this.emit('client ready')\n            }\n        } catch (error) {\n            this.emit('client crashed')\n            throw error\n        }\n    }\n\n    private async configurePageOptions(): Promise<void> {\n        if (!this.page) return\n\n        await this.page.setViewport({\n            width: Math.floor(Math.random() * (1920 - 1366 + 1)) + 1366,\n            height: Math.floor(Math.random() * (1080 - 768 + 1)) + 768,\n            deviceScaleFactor: 1,\n            isMobile: false,\n            hasTouch: false,\n            isLandscape: false,\n        })\n\n        if (\n            this.options.userAgent != null ||\n            this.options.userAgent === undefined\n        ) {\n            console.log(this.userAgent.random().toString())\n            await this.page.setUserAgent(this.userAgent.random().toString())\n        }\n\n        if (this.options.proxyAuthentication) {\n            await this.page.authenticate(this.options.proxyAuthentication)\n        }\n\n        if (this.options.bypassCSP) {\n            await this.page.setBypassCSP(this.options.bypassCSP)\n        }\n\n        await this.page.evaluateOnNewDocument((): void => {\n            ;(window as any).Error = Error\n        })\n    }\n\n    private async navigateToHIBP(): Promise<void> {\n        await this.page?.goto(HIBP_URL, {\n            waitUntil: 'networkidle0',\n            timeout: 0,\n            referer: HIBP_REFERRER,\n        })\n    }\n\n    private async waitFor(\n        ms: number,\n        minDelay: number,\n        maxDelay: number\n    ): Promise<void> {\n        const randomDelay = (min: number, max: number) =>\n            Math.floor(Math.random() * (max - min + 1)) + min\n        return new Promise<void>((resolve) =>\n            setTimeout(() => resolve(), randomDelay(minDelay, maxDelay))\n        )\n    }\n\n    private onEvent(eventName: string, cb: EventListenerCallBack): this {\n        return this.on(eventName, (...args: any[]) => {\n            cb(...args)\n        })\n    }\n}\n","export const PASSWORD_NAVBAR_LINK: string = 'a[href=\"/Passwords\"]'\nexport const HOME_NAVBAR_LINK: string = 'a[href=\"/Home\"]'\nexport const PASSWORD_INPUT: string = 'input[placeholder=\"password\"]'\nexport const EMAIL_INPUT: string = 'input[placeholder=\"email address\"]'\nexport const PWNED_BTN: string = '#searchPwnedPasswords'\nexport const EMAIL_BTN: string = '#searchPwnage'\nexport const PWNED_MESSAGE_CONTAINER: string = '.pwnTitle'\nexport const PWNED_MESSAGE_RESULT: string = '#pwnedPasswordResult'\nexport const PWNED_EMAIL_RESULT: string = '.pwnTitle'\n","export * from './elementObserver'\n","import { Page } from 'puppeteer'\n\nexport const isElementInDom = async (\n    page: Page,\n    elementSelector: string\n): Promise<boolean> => {\n    try {\n        const isElement: boolean | undefined = await page?.evaluate(\n            async (selector: string): Promise<boolean> => {\n                return new Promise<boolean>((resolve): void => {\n                    const element: Element | null =\n                        document.querySelector(selector)\n\n                    if (element) {\n                        resolve(true)\n                        return\n                    }\n\n                    const observer: MutationObserver = new MutationObserver(\n                        (): void => {\n                            const scannedElement: Element | null =\n                                document.querySelector(selector)\n                            if (scannedElement) {\n                                observer.disconnect()\n                                resolve(true)\n                            }\n                        }\n                    )\n\n                    observer.observe(document, {\n                        childList: true,\n                        subtree: true,\n                    })\n\n                    setTimeout(() => {\n                        observer.disconnect()\n                        resolve(false)\n                    }, 5000)\n                })\n            },\n            elementSelector\n        )\n\n        return isElement || false\n    } catch (error) {\n        return false\n    }\n}\n","import { Page } from 'puppeteer'\nimport {\n    PASSWORD_NAVBAR_LINK,\n    PASSWORD_INPUT,\n    PWNED_BTN,\n    PWNED_MESSAGE_CONTAINER,\n    PWNED_MESSAGE_RESULT,\n    HOME_NAVBAR_LINK,\n    EMAIL_INPUT,\n    EMAIL_BTN,\n    PWNED_EMAIL_RESULT,\n} from '@constants/selectors'\nimport { isElementInDom } from '../utils'\n\nexport class Pwned {\n    private readonly navLink: string = PASSWORD_NAVBAR_LINK\n    private readonly pwInput: string = PASSWORD_INPUT\n    private readonly emailInput: string = EMAIL_INPUT\n    private readonly pwnedBtn: string = PWNED_BTN\n    private readonly searchPwnageBtn: string = EMAIL_BTN\n    private readonly messageContainer: string = PWNED_MESSAGE_CONTAINER\n    private readonly messageEmailContainer: string = PWNED_EMAIL_RESULT\n    private readonly pwnedMessage: string = PWNED_MESSAGE_RESULT\n    private readonly homeLink: string = HOME_NAVBAR_LINK\n\n    constructor() {}\n\n    async isEmailPwned(page: Page, email: string) {\n        try {\n            await page.type(this.emailInput, email, { delay: 120 })\n            await page.click(this.searchPwnageBtn)\n\n            const isResponseAvailable: boolean =\n                await this.isConfirmationMessageInDom(\n                    page,\n                    this.messageContainer\n                )\n\n            if (isResponseAvailable) {\n                await this.waitFor(1500, 2500)\n                const messageContent: string = await page.$eval(\n                    this.messageEmailContainer,\n                    (el) => el.textContent?.trim() || ''\n                )\n\n                return {\n                    isEmailPwned: true,\n                    message: messageContent,\n                }\n            }\n        } catch (error) {\n            return {\n                message: 'An error occurred',\n            }\n        }\n    }\n\n    async isPasswordPwned(page: Page, password: string) {\n        try {\n            await page.waitForSelector(this.navLink, {\n                visible: true,\n                timeout: 50000,\n            })\n            await page.click(this.navLink)\n            await this.waitFor(1000, 2000)\n            await page.type(this.pwInput, password, { delay: 120 })\n            await page.click(this.pwnedBtn)\n\n            const isResponseAvailable: boolean =\n                await this.isConfirmationMessageInDom(\n                    page,\n                    this.messageContainer\n                )\n\n            if (isResponseAvailable) {\n                await this.waitFor(1000, 2000)\n                const messageContent: string = await page.$eval(\n                    this.pwnedMessage,\n                    (el) => el.textContent?.trim() || ''\n                )\n\n                return {\n                    isPasswordPwned: true,\n                    message: messageContent,\n                }\n            }\n        } catch (error) {\n            return {\n                message: 'An error occurred',\n            }\n        }\n    }\n\n    private async waitFor(minDelay: number, maxDelay: number): Promise<void> {\n        const randomDelay = (min: number, max: number) =>\n            Math.floor(Math.random() * (max - min + 1)) + min\n        return new Promise<void>((resolve) =>\n            setTimeout(() => resolve(), randomDelay(minDelay, maxDelay))\n        )\n    }\n\n    private async isConfirmationMessageInDom(\n        page: Page,\n        selector: string\n    ): Promise<boolean> {\n        try {\n            return await isElementInDom(page, selector)\n        } catch (error) {\n            return false\n        }\n    }\n}\n","export type PuppeteerArgs =\n    | '--no-sandbox'\n    | '--disable-setuid-sandbox'\n    | '--disable-infobars'\n    | '--single-process'\n    | '--no-zygote'\n    | '--no-first-run'\n    | '--window-position=0,0'\n    | '--ignore-certificate-errors'\n    | '--ignore-certificate-errors-skip-list'\n    | '--disable-dev-shm-usage'\n    | '--disable-accelerated-2d-canvas'\n    | '--disable-gpu'\n    | '--hide-scrollbars'\n    | '--disable-notifications'\n    | '--disable-background-timer-throttling'\n    | '--disable-backgrounding-occluded-windows'\n    | '--disable-breakpad'\n    | '--disable-component-extensions-with-background-pages'\n    | '--disable-extensions'\n    | '--disable-features=TranslateUI,BlinkGenPropertyTrees'\n    | '--disable-ipc-flooding-protection'\n    | '--disable-renderer-backgrounding'\n    | '--enable-features=NetworkService,NetworkServiceInProcess'\n    | '--force-color-profile=srgb'\n    | '--metrics-recording-only'\n    | '--mute-audio'\n    | '--disable-web-security'\n    | '--auto-open-devtools-for-tabs'\n\nexport interface PuppeteerOptions {\n    headless: boolean\n    defaultViewport: null\n    args: PuppeteerArgs[]\n}\n\nexport interface ClientOptions {\n    browserWSEndpoint?: string\n    browserURL?: string\n    authTimeoutMs?: number\n    qrMaxRetries?: number\n    takeoverOnConflict?: boolean\n    takeoverTimeoutMs?: number\n    userAgent?: string\n    ffmpegPath?: 'ffmpeg'\n    bypassCSP?: boolean\n    proxyAuthentication?: undefined\n    userDataPath?: string\n}\n","export type EventListenerCallBack = (...args: any[]) => any | void\n"]}