{"version":3,"sources":["../src/constants/common.ts","../src/client/Client.ts","../src/constants/selectors.ts","../src/utils/index.ts","../src/utils/elementObserver.ts","../src/client/pwned.ts","../src/types/puppeteer.types.ts","../src/types/client.types.ts"],"sourcesContent":["import { ClientOptions, PuppeteerOptions } from '@/types/puppeteer.types'\n\nexport const HIBP_URL: string = 'https://haveibeenpwned.com/'\nexport const HIBP_REFERRER: string =\n    'https://www.google.com/search?q=ihave+been+pwned&oq=ihave+been+pwned&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTINCAEQLhiDARixAxiABDIHCAIQABiABDINCAMQLhjHARjRAxiABDIHCAQQLhiABDIJCAUQABgKGIAEMgcIBhAAGIAEMgcIBxAAGIAEMgcICBAAGIAE0gEIMzkwOWowajeoAgCwAgA&sourceid=chrome&ie=UTF-8'\n\nexport const DEFAULT_PUPPETEER_OPTIONS: PuppeteerOptions = {\n    headless: false,\n    defaultViewport: null,\n    args: ['--no-sandbox', '--disable-setuid-sandbox'],\n}\n\nexport const DEFAULT_CLIENT_OPTIONS: ClientOptions = {\n    authTimeoutMs: 0,\n    qrMaxRetries: 0,\n    takeoverOnConflict: false,\n    takeoverTimeoutMs: 0,\n    ffmpegPath: 'ffmpeg',\n    bypassCSP: true,\n    proxyAuthentication: undefined,\n}\n","import { Browser, Page } from 'puppeteer'\nimport {\n    DEFAULT_CLIENT_OPTIONS,\n    DEFAULT_PUPPETEER_OPTIONS,\n    HIBP_URL,\n    HIBP_REFERRER,\n} from '@constants/common'\nimport EventEmitter from 'node:events'\nimport { Pwned } from '@client/pwned'\nimport puppeteer from 'puppeteer-extra'\nimport StealthPlugin from 'puppeteer-extra-plugin-stealth'\nimport UserAgent from 'user-agents'\nimport {\n    ClientOptions,\n    EventListenerCallBack,\n    PuppeteerOptions,\n} from '../types'\n\nexport class Ihbp extends EventEmitter {\n    private readonly puppeteerOptions?: PuppeteerOptions\n    private options: ClientOptions\n    private page?: Page\n    private browser?: Browser\n    private pwned: Pwned\n    private userAgent: UserAgent\n\n    constructor(\n        options: ClientOptions,\n        puppeteerOptions: Partial<PuppeteerOptions> = {}\n    ) {\n        super()\n        this.puppeteerOptions = {\n            ...DEFAULT_PUPPETEER_OPTIONS,\n            ...puppeteerOptions,\n        }\n        this.options = { ...DEFAULT_CLIENT_OPTIONS, ...options }\n        this.pwned = new Pwned()\n        this.userAgent = new UserAgent()\n    }\n\n    when(event: string, listener: EventListenerCallBack) {\n        this.on(event, listener)\n    }\n\n    async init() {\n        await this.initializeBrowser()\n        await this.configurePageOptions()\n        await this.navigateToHIBP()\n    }\n\n    protected async isPasswordPwned(password: string) {\n        return await this.pwned.isPasswordPwned(this.page!, password)\n    }\n\n    protected async isEmailPwned(email: string) {\n        await this.navigateToHIBP()\n        return await this.pwned.isEmailPwned(this.page!, email)\n    }\n\n    private async initializeBrowser(): Promise<void> {\n        try {\n            this.browser = await puppeteer\n                .use(StealthPlugin())\n                .launch(this.puppeteerOptions)\n            const pages: Page[] = await this.browser.pages()\n            this.page =\n                pages.length > 0 ? pages[0] : await this.browser.newPage()\n\n            if (this.browser && this.page) {\n                this.emit('client ready')\n            }\n        } catch (error) {\n            this.emit('client crashed')\n            throw error\n        }\n    }\n\n    private async configurePageOptions(): Promise<void> {\n        if (!this.page) return\n\n        await this.page.setViewport({\n            width: Math.floor(Math.random() * (1920 - 1366 + 1)) + 1366,\n            height: Math.floor(Math.random() * (1080 - 768 + 1)) + 768,\n            deviceScaleFactor: 1,\n            isMobile: false,\n            hasTouch: false,\n            isLandscape: false,\n        })\n\n        if (\n            this.options.userAgent != null ||\n            this.options.userAgent === undefined\n        ) {\n            console.log(this.userAgent.random().toString())\n            await this.page.setUserAgent(this.userAgent.random().toString())\n        }\n\n        if (this.options.proxyAuthentication) {\n            await this.page.authenticate(this.options.proxyAuthentication)\n        }\n\n        if (this.options.bypassCSP) {\n            await this.page.setBypassCSP(this.options.bypassCSP)\n        }\n\n        await this.page.evaluateOnNewDocument((): void => {\n            ;(window as any).Error = Error\n        })\n    }\n\n    private async navigateToHIBP(): Promise<void> {\n        await this.page?.goto(HIBP_URL, {\n            waitUntil: 'networkidle0',\n            timeout: 0,\n            referer: HIBP_REFERRER,\n        })\n    }\n\n    private async waitFor(\n        ms: number,\n        minDelay: number,\n        maxDelay: number\n    ): Promise<void> {\n        const randomDelay = (min: number, max: number) =>\n            Math.floor(Math.random() * (max - min + 1)) + min\n        return new Promise<void>((resolve) =>\n            setTimeout(() => resolve(), randomDelay(minDelay, maxDelay))\n        )\n    }\n\n    private onEvent(eventName: string, cb: EventListenerCallBack): this {\n        return this.on(eventName, (...args: any[]) => {\n            cb(...args)\n        })\n    }\n}\n","export const PASSWORD_NAVBAR_LINK: string = 'a[href=\"/Passwords\"]'\nexport const HOME_NAVBAR_LINK: string = 'a[href=\"/Home\"]'\nexport const PASSWORD_INPUT: string = 'input[placeholder=\"password\"]'\nexport const EMAIL_INPUT: string = 'input[placeholder=\"email address\"]'\nexport const PWNED_BTN: string = '#searchPwnedPasswords'\nexport const EMAIL_BTN: string = '#searchPwnage'\nexport const PWNED_MESSAGE_CONTAINER: string = '.pwnTitle'\nexport const PWNED_MESSAGE_RESULT: string = '#pwnedPasswordResult'\nexport const PWNED_EMAIL_RESULT: string = '.pwnTitle'\n","export * from './elementObserver'\n","import { Page } from 'puppeteer'\n\nexport const isElementInDom = async (\n    page: Page,\n    elementSelector: string\n): Promise<boolean> => {\n    try {\n        const isElement: boolean | undefined = await page?.evaluate(\n            async (selector: string): Promise<boolean> => {\n                return new Promise<boolean>((resolve): void => {\n                    const element: Element | null =\n                        document.querySelector(selector)\n\n                    if (element) {\n                        resolve(true)\n                        return\n                    }\n\n                    const observer: MutationObserver = new MutationObserver(\n                        (): void => {\n                            const scannedElement: Element | null =\n                                document.querySelector(selector)\n                            if (scannedElement) {\n                                observer.disconnect()\n                                resolve(true)\n                            }\n                        }\n                    )\n\n                    observer.observe(document, {\n                        childList: true,\n                        subtree: true,\n                    })\n\n                    setTimeout(() => {\n                        observer.disconnect()\n                        resolve(false)\n                    }, 5000)\n                })\n            },\n            elementSelector\n        )\n\n        return isElement || false\n    } catch (error) {\n        return false\n    }\n}\n","import { Page } from 'puppeteer'\nimport {\n    PASSWORD_NAVBAR_LINK,\n    PASSWORD_INPUT,\n    PWNED_BTN,\n    PWNED_MESSAGE_CONTAINER,\n    PWNED_MESSAGE_RESULT,\n    HOME_NAVBAR_LINK,\n    EMAIL_INPUT,\n    EMAIL_BTN,\n    PWNED_EMAIL_RESULT,\n} from '@constants/selectors'\nimport { isElementInDom } from '../utils'\n\nexport class Pwned {\n    private readonly navLink: string = PASSWORD_NAVBAR_LINK\n    private readonly pwInput: string = PASSWORD_INPUT\n    private readonly emailInput: string = EMAIL_INPUT\n    private readonly pwnedBtn: string = PWNED_BTN\n    private readonly searchPwnageBtn: string = EMAIL_BTN\n    private readonly messageContainer: string = PWNED_MESSAGE_CONTAINER\n    private readonly messageEmailContainer: string = PWNED_EMAIL_RESULT\n    private readonly pwnedMessage: string = PWNED_MESSAGE_RESULT\n    private readonly homeLink: string = HOME_NAVBAR_LINK\n\n    constructor() {}\n\n    async isEmailPwned(page: Page, email: string) {\n        try {\n            await page.type(this.emailInput, email, { delay: 120 })\n            await page.click(this.searchPwnageBtn)\n\n            const isResponseAvailable: boolean =\n                await this.isConfirmationMessageInDom(\n                    page,\n                    this.messageContainer\n                )\n\n            if (isResponseAvailable) {\n                await this.waitFor(1500, 2500)\n                const messageContent: string = await page.$eval(\n                    this.messageEmailContainer,\n                    (el) => el.textContent?.trim() || ''\n                )\n\n                return {\n                    isEmailPwned: true,\n                    message: messageContent,\n                }\n            }\n        } catch (error) {\n            return {\n                message: 'An error occurred',\n            }\n        }\n    }\n\n    async isPasswordPwned(page: Page, password: string) {\n        try {\n            await page.waitForSelector(this.navLink, {\n                visible: true,\n                timeout: 50000,\n            })\n            await page.click(this.navLink)\n            await this.waitFor(1000, 2000)\n            await page.type(this.pwInput, password, { delay: 120 })\n            await page.click(this.pwnedBtn)\n\n            const isResponseAvailable: boolean =\n                await this.isConfirmationMessageInDom(\n                    page,\n                    this.messageContainer\n                )\n\n            if (isResponseAvailable) {\n                await this.waitFor(1000, 2000)\n                const messageContent: string = await page.$eval(\n                    this.pwnedMessage,\n                    (el) => el.textContent?.trim() || ''\n                )\n\n                return {\n                    isPasswordPwned: true,\n                    message: messageContent,\n                }\n            }\n        } catch (error) {\n            return {\n                message: 'An error occurred',\n            }\n        }\n    }\n\n    private async waitFor(minDelay: number, maxDelay: number): Promise<void> {\n        const randomDelay = (min: number, max: number) =>\n            Math.floor(Math.random() * (max - min + 1)) + min\n        return new Promise<void>((resolve) =>\n            setTimeout(() => resolve(), randomDelay(minDelay, maxDelay))\n        )\n    }\n\n    private async isConfirmationMessageInDom(\n        page: Page,\n        selector: string\n    ): Promise<boolean> {\n        try {\n            return await isElementInDom(page, selector)\n        } catch (error) {\n            return false\n        }\n    }\n}\n","export type PuppeteerArgs =\n    | '--no-sandbox'\n    | '--disable-setuid-sandbox'\n    | '--disable-infobars'\n    | '--single-process'\n    | '--no-zygote'\n    | '--no-first-run'\n    | '--window-position=0,0'\n    | '--ignore-certificate-errors'\n    | '--ignore-certificate-errors-skip-list'\n    | '--disable-dev-shm-usage'\n    | '--disable-accelerated-2d-canvas'\n    | '--disable-gpu'\n    | '--hide-scrollbars'\n    | '--disable-notifications'\n    | '--disable-background-timer-throttling'\n    | '--disable-backgrounding-occluded-windows'\n    | '--disable-breakpad'\n    | '--disable-component-extensions-with-background-pages'\n    | '--disable-extensions'\n    | '--disable-features=TranslateUI,BlinkGenPropertyTrees'\n    | '--disable-ipc-flooding-protection'\n    | '--disable-renderer-backgrounding'\n    | '--enable-features=NetworkService,NetworkServiceInProcess'\n    | '--force-color-profile=srgb'\n    | '--metrics-recording-only'\n    | '--mute-audio'\n    | '--disable-web-security'\n    | '--auto-open-devtools-for-tabs'\n\nexport interface PuppeteerOptions {\n    headless: boolean\n    defaultViewport: null\n    args: PuppeteerArgs[]\n}\n\nexport interface ClientOptions {\n    browserWSEndpoint?: string\n    browserURL?: string\n    authTimeoutMs?: number\n    qrMaxRetries?: number\n    takeoverOnConflict?: boolean\n    takeoverTimeoutMs?: number\n    userAgent?: string\n    ffmpegPath?: 'ffmpeg'\n    bypassCSP?: boolean\n    proxyAuthentication?: undefined\n    userDataPath?: string\n}\n","export type EventListenerCallBack = (...args: any[]) => any | void\n"],"mappings":"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","names":[]}