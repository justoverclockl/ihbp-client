{"version":3,"sources":["../src/constants/common.ts","../src/client/Client.ts","../src/constants/selectors.ts","../src/utils/index.ts","../src/utils/elementObserver.ts","../src/client/pwned.ts","../src/types/puppeteer.types.ts","../src/types/client.types.ts"],"sourcesContent":["import { ClientOptions, PuppeteerOptions } from '@/types/puppeteer.types'\n\nexport const HIBP_URL: string = 'https://haveibeenpwned.com/'\nexport const HIBP_REFERRER: string =\n    'https://www.google.com/search?q=ihave+been+pwned&oq=ihave+been+pwned&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTINCAEQLhiDARixAxiABDIHCAIQABiABDINCAMQLhjHARjRAxiABDIHCAQQLhiABDIJCAUQABgKGIAEMgcIBhAAGIAEMgcIBxAAGIAEMgcICBAAGIAE0gEIMzkwOWowajeoAgCwAgA&sourceid=chrome&ie=UTF-8'\n\nexport const DEFAULT_PUPPETEER_OPTIONS: PuppeteerOptions = {\n    headless: false,\n    defaultViewport: null,\n    args: ['--no-sandbox', '--disable-setuid-sandbox'],\n}\n\nexport const DEFAULT_CLIENT_OPTIONS: ClientOptions = {\n    authTimeoutMs: 0,\n    qrMaxRetries: 0,\n    takeoverOnConflict: false,\n    takeoverTimeoutMs: 0,\n    ffmpegPath: 'ffmpeg',\n    bypassCSP: true,\n    proxyAuthentication: undefined,\n}\n","import { Browser, Page } from 'puppeteer'\nimport {\n    DEFAULT_CLIENT_OPTIONS,\n    DEFAULT_PUPPETEER_OPTIONS,\n    HIBP_URL,\n    HIBP_REFERRER,\n} from '@constants/common'\nimport EventEmitter from 'node:events'\nimport { Pwned } from '@client/pwned'\nimport puppeteer from 'puppeteer-extra'\nimport StealthPlugin from 'puppeteer-extra-plugin-stealth'\nimport UserAgent from 'user-agents'\nimport {\n    ClientOptions,\n    EventListenerCallBack,\n    PuppeteerOptions,\n} from '../types'\n\nexport class Ihbp extends EventEmitter {\n    private readonly puppeteerOptions?: PuppeteerOptions\n    private options: ClientOptions\n    private page?: Page\n    private browser?: Browser\n    private pwned: Pwned\n    private userAgent: UserAgent\n\n    constructor(\n        options: ClientOptions,\n        puppeteerOptions: Partial<PuppeteerOptions> = {}\n    ) {\n        super()\n        this.puppeteerOptions = {\n            ...DEFAULT_PUPPETEER_OPTIONS,\n            ...puppeteerOptions,\n        }\n        this.options = { ...DEFAULT_CLIENT_OPTIONS, ...options }\n        this.pwned = new Pwned()\n        this.userAgent = new UserAgent()\n    }\n\n    when(event: string, listener: EventListenerCallBack) {\n        this.on(event, listener)\n    }\n\n    async init() {\n        await this.initializeBrowser()\n        await this.configurePageOptions()\n        await this.navigateToHIBP()\n    }\n\n    protected async isPasswordPwned(password: string) {\n        return await this.pwned.isPasswordPwned(this.page!, password)\n    }\n\n    protected async isEmailPwned(email: string) {\n        await this.navigateToHIBP()\n        return await this.pwned.isEmailPwned(this.page!, email)\n    }\n\n    private async initializeBrowser(): Promise<void> {\n        try {\n            this.browser = await puppeteer\n                .use(StealthPlugin())\n                .launch(this.puppeteerOptions)\n            const pages: Page[] = await this.browser.pages()\n            this.page =\n                pages.length > 0 ? pages[0] : await this.browser.newPage()\n\n            if (this.browser && this.page) {\n                this.emit('client ready')\n            }\n        } catch (error) {\n            this.emit('client crashed')\n            throw error\n        }\n    }\n\n    private async configurePageOptions(): Promise<void> {\n        if (!this.page) return\n\n        await this.page.setViewport({\n            width: Math.floor(Math.random() * (1920 - 1366 + 1)) + 1366,\n            height: Math.floor(Math.random() * (1080 - 768 + 1)) + 768,\n            deviceScaleFactor: 1,\n            isMobile: false,\n            hasTouch: false,\n            isLandscape: false,\n        })\n\n        if (\n            this.options.userAgent != null ||\n            this.options.userAgent === undefined\n        ) {\n            console.log(this.userAgent.random().toString())\n            await this.page.setUserAgent(this.userAgent.random().toString())\n        }\n\n        if (this.options.proxyAuthentication) {\n            await this.page.authenticate(this.options.proxyAuthentication)\n        }\n\n        if (this.options.bypassCSP) {\n            await this.page.setBypassCSP(this.options.bypassCSP)\n        }\n\n        await this.page.evaluateOnNewDocument((): void => {\n            ;(window as any).Error = Error\n        })\n    }\n\n    private async navigateToHIBP(): Promise<void> {\n        await this.page?.goto(HIBP_URL, {\n            waitUntil: 'networkidle0',\n            timeout: 0,\n            referer: HIBP_REFERRER,\n        })\n    }\n\n    private async waitFor(\n        ms: number,\n        minDelay: number,\n        maxDelay: number\n    ): Promise<void> {\n        const randomDelay = (min: number, max: number) =>\n            Math.floor(Math.random() * (max - min + 1)) + min\n        return new Promise<void>((resolve) =>\n            setTimeout(() => resolve(), randomDelay(minDelay, maxDelay))\n        )\n    }\n\n    private onEvent(eventName: string, cb: EventListenerCallBack): this {\n        return this.on(eventName, (...args: any[]) => {\n            cb(...args)\n        })\n    }\n}\n","export const PASSWORD_NAVBAR_LINK: string = 'a[href=\"/Passwords\"]'\nexport const HOME_NAVBAR_LINK: string = 'a[href=\"/Home\"]'\nexport const PASSWORD_INPUT: string = 'input[placeholder=\"password\"]'\nexport const EMAIL_INPUT: string = 'input[placeholder=\"email address\"]'\nexport const PWNED_BTN: string = '#searchPwnedPasswords'\nexport const EMAIL_BTN: string = '#searchPwnage'\nexport const PWNED_MESSAGE_CONTAINER: string = '.pwnTitle'\nexport const PWNED_MESSAGE_RESULT: string = '#pwnedPasswordResult'\nexport const PWNED_EMAIL_RESULT: string = '.pwnTitle'\n","export * from './elementObserver'\n","import { Page } from 'puppeteer'\n\nexport const isElementInDom = async (\n    page: Page,\n    elementSelector: string\n): Promise<boolean> => {\n    try {\n        const isElement: boolean | undefined = await page?.evaluate(\n            async (selector: string): Promise<boolean> => {\n                return new Promise<boolean>((resolve): void => {\n                    const element: Element | null =\n                        document.querySelector(selector)\n\n                    if (element) {\n                        resolve(true)\n                        return\n                    }\n\n                    const observer: MutationObserver = new MutationObserver(\n                        (): void => {\n                            const scannedElement: Element | null =\n                                document.querySelector(selector)\n                            if (scannedElement) {\n                                observer.disconnect()\n                                resolve(true)\n                            }\n                        }\n                    )\n\n                    observer.observe(document, {\n                        childList: true,\n                        subtree: true,\n                    })\n\n                    setTimeout(() => {\n                        observer.disconnect()\n                        resolve(false)\n                    }, 5000)\n                })\n            },\n            elementSelector\n        )\n\n        return isElement || false\n    } catch (error) {\n        return false\n    }\n}\n","import { Page } from 'puppeteer'\nimport {\n    PASSWORD_NAVBAR_LINK,\n    PASSWORD_INPUT,\n    PWNED_BTN,\n    PWNED_MESSAGE_CONTAINER,\n    PWNED_MESSAGE_RESULT,\n    HOME_NAVBAR_LINK,\n    EMAIL_INPUT,\n    EMAIL_BTN,\n    PWNED_EMAIL_RESULT,\n} from '@constants/selectors'\nimport { isElementInDom } from '../utils'\n\nexport class Pwned {\n    private readonly navLink: string = PASSWORD_NAVBAR_LINK\n    private readonly pwInput: string = PASSWORD_INPUT\n    private readonly emailInput: string = EMAIL_INPUT\n    private readonly pwnedBtn: string = PWNED_BTN\n    private readonly searchPwnageBtn: string = EMAIL_BTN\n    private readonly messageContainer: string = PWNED_MESSAGE_CONTAINER\n    private readonly messageEmailContainer: string = PWNED_EMAIL_RESULT\n    private readonly pwnedMessage: string = PWNED_MESSAGE_RESULT\n    private readonly homeLink: string = HOME_NAVBAR_LINK\n\n    constructor() {}\n\n    async isEmailPwned(page: Page, email: string) {\n        try {\n            await page.type(this.emailInput, email, { delay: 120 })\n            await page.click(this.searchPwnageBtn)\n\n            const isResponseAvailable: boolean =\n                await this.isConfirmationMessageInDom(\n                    page,\n                    this.messageContainer\n                )\n\n            if (isResponseAvailable) {\n                await this.waitFor(1500, 2500)\n                const messageContent: string = await page.$eval(\n                    this.messageEmailContainer,\n                    (el) => el.textContent?.trim() || ''\n                )\n\n                return {\n                    isEmailPwned: true,\n                    message: messageContent,\n                }\n            }\n        } catch (error) {\n            return {\n                message: 'An error occurred',\n            }\n        }\n    }\n\n    async isPasswordPwned(page: Page, password: string) {\n        try {\n            await page.waitForSelector(this.navLink, {\n                visible: true,\n                timeout: 50000,\n            })\n            await page.click(this.navLink)\n            await this.waitFor(1000, 2000)\n            await page.type(this.pwInput, password, { delay: 120 })\n            await page.click(this.pwnedBtn)\n\n            const isResponseAvailable: boolean =\n                await this.isConfirmationMessageInDom(\n                    page,\n                    this.messageContainer\n                )\n\n            if (isResponseAvailable) {\n                await this.waitFor(1000, 2000)\n                const messageContent: string = await page.$eval(\n                    this.pwnedMessage,\n                    (el) => el.textContent?.trim() || ''\n                )\n\n                return {\n                    isPasswordPwned: true,\n                    message: messageContent,\n                }\n            }\n        } catch (error) {\n            return {\n                message: 'An error occurred',\n            }\n        }\n    }\n\n    private async waitFor(minDelay: number, maxDelay: number): Promise<void> {\n        const randomDelay = (min: number, max: number) =>\n            Math.floor(Math.random() * (max - min + 1)) + min\n        return new Promise<void>((resolve) =>\n            setTimeout(() => resolve(), randomDelay(minDelay, maxDelay))\n        )\n    }\n\n    private async isConfirmationMessageInDom(\n        page: Page,\n        selector: string\n    ): Promise<boolean> {\n        try {\n            return await isElementInDom(page, selector)\n        } catch (error) {\n            return false\n        }\n    }\n}\n","export type PuppeteerArgs =\n    | '--no-sandbox'\n    | '--disable-setuid-sandbox'\n    | '--disable-infobars'\n    | '--single-process'\n    | '--no-zygote'\n    | '--no-first-run'\n    | '--window-position=0,0'\n    | '--ignore-certificate-errors'\n    | '--ignore-certificate-errors-skip-list'\n    | '--disable-dev-shm-usage'\n    | '--disable-accelerated-2d-canvas'\n    | '--disable-gpu'\n    | '--hide-scrollbars'\n    | '--disable-notifications'\n    | '--disable-background-timer-throttling'\n    | '--disable-backgrounding-occluded-windows'\n    | '--disable-breakpad'\n    | '--disable-component-extensions-with-background-pages'\n    | '--disable-extensions'\n    | '--disable-features=TranslateUI,BlinkGenPropertyTrees'\n    | '--disable-ipc-flooding-protection'\n    | '--disable-renderer-backgrounding'\n    | '--enable-features=NetworkService,NetworkServiceInProcess'\n    | '--force-color-profile=srgb'\n    | '--metrics-recording-only'\n    | '--mute-audio'\n    | '--disable-web-security'\n    | '--auto-open-devtools-for-tabs'\n\nexport interface PuppeteerOptions {\n    headless: boolean\n    defaultViewport: null\n    args: PuppeteerArgs[]\n}\n\nexport interface ClientOptions {\n    browserWSEndpoint?: string\n    browserURL?: string\n    authTimeoutMs?: number\n    qrMaxRetries?: number\n    takeoverOnConflict?: boolean\n    takeoverTimeoutMs?: number\n    userAgent?: string\n    ffmpegPath?: 'ffmpeg'\n    bypassCSP?: boolean\n    proxyAuthentication?: undefined\n    userDataPath?: string\n}\n","export type EventListenerCallBack = (...args: any[]) => any | void\n"],"mappings":"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","names":["common_exports","__export","DEFAULT_CLIENT_OPTIONS","DEFAULT_PUPPETEER_OPTIONS","HIBP_REFERRER","HIBP_URL","HIBP_URL","HIBP_REFERRER","DEFAULT_PUPPETEER_OPTIONS","DEFAULT_CLIENT_OPTIONS","EventEmitter","selectors_exports","__export","EMAIL_BTN","EMAIL_INPUT","HOME_NAVBAR_LINK","PASSWORD_INPUT","PASSWORD_NAVBAR_LINK","PWNED_BTN","PWNED_EMAIL_RESULT","PWNED_MESSAGE_CONTAINER","PWNED_MESSAGE_RESULT","PASSWORD_NAVBAR_LINK","HOME_NAVBAR_LINK","PASSWORD_INPUT","EMAIL_INPUT","PWNED_BTN","EMAIL_BTN","PWNED_MESSAGE_CONTAINER","PWNED_MESSAGE_RESULT","PWNED_EMAIL_RESULT","utils_exports","__export","isElementInDom","isElementInDom","page","elementSelector","selector","resolve","observer","Pwned","PASSWORD_NAVBAR_LINK","PASSWORD_INPUT","EMAIL_INPUT","PWNED_BTN","EMAIL_BTN","PWNED_MESSAGE_CONTAINER","PWNED_EMAIL_RESULT","PWNED_MESSAGE_RESULT","HOME_NAVBAR_LINK","page","email","el","password","minDelay","maxDelay","randomDelay","min","max","resolve","selector","isElementInDom","puppeteer","StealthPlugin","UserAgent","Ihbp","EventEmitter","options","puppeteerOptions","DEFAULT_PUPPETEER_OPTIONS","DEFAULT_CLIENT_OPTIONS","Pwned","event","listener","password","email","pages","error","HIBP_URL","HIBP_REFERRER","ms","minDelay","maxDelay","randomDelay","min","max","resolve","eventName","cb","args","puppeteer_types_exports","client_types_exports"]}